import { Prisma } from '@prisma/client';
export {
  UserObject,
  UserIdFieldObject,
  UserEmailFieldObject,
  UserNameFieldObject,
  UserImageFieldObject,
  UserPasswordFieldObject,
  UserRolesFieldObject,
  UserAccountsFieldObject,
  UserCreatedAtFieldObject,
  UserUpdatedAtFieldObject,
  createManyUserMutation,
  createOneUserMutation,
  deleteManyUserMutation,
  deleteOneUserMutation,
  updateManyUserMutation,
  updateOneUserMutation,
  upsertOneUserMutation,
  createManyUserMutationObject,
  createOneUserMutationObject,
  deleteManyUserMutationObject,
  deleteOneUserMutationObject,
  updateManyUserMutationObject,
  updateOneUserMutationObject,
  upsertOneUserMutationObject,
  findFirstUserQuery,
  findManyUserQuery,
  countUserQuery,
  findUniqueUserQuery,
  findFirstUserQueryObject,
  findManyUserQueryObject,
  countUserQueryObject,
  findUniqueUserQueryObject
} from './User';
export {
  AccountObject,
  AccountIdFieldObject,
  AccountProviderFieldObject,
  AccountProviderAccountIdFieldObject,
  AccountAccessTokenFieldObject,
  AccountRefreshTokenFieldObject,
  AccountExpiresAtFieldObject,
  AccountUserIdFieldObject,
  AccountUserFieldObject,
  createManyAccountMutation,
  createOneAccountMutation,
  deleteManyAccountMutation,
  deleteOneAccountMutation,
  updateManyAccountMutation,
  updateOneAccountMutation,
  upsertOneAccountMutation,
  createManyAccountMutationObject,
  createOneAccountMutationObject,
  deleteManyAccountMutationObject,
  deleteOneAccountMutationObject,
  updateManyAccountMutationObject,
  updateOneAccountMutationObject,
  upsertOneAccountMutationObject,
  findFirstAccountQuery,
  findManyAccountQuery,
  countAccountQuery,
  findUniqueAccountQuery,
  findFirstAccountQueryObject,
  findManyAccountQueryObject,
  countAccountQueryObject,
  findUniqueAccountQueryObject
} from './Account';
export {
  RoleObject,
  RoleIdFieldObject,
  RoleNameFieldObject,
  RoleDescriptionFieldObject,
  RoleUsersFieldObject,
  RolePermissionsFieldObject,
  createManyRoleMutation,
  createOneRoleMutation,
  deleteManyRoleMutation,
  deleteOneRoleMutation,
  updateManyRoleMutation,
  updateOneRoleMutation,
  upsertOneRoleMutation,
  createManyRoleMutationObject,
  createOneRoleMutationObject,
  deleteManyRoleMutationObject,
  deleteOneRoleMutationObject,
  updateManyRoleMutationObject,
  updateOneRoleMutationObject,
  upsertOneRoleMutationObject,
  findFirstRoleQuery,
  findManyRoleQuery,
  countRoleQuery,
  findUniqueRoleQuery,
  findFirstRoleQueryObject,
  findManyRoleQueryObject,
  countRoleQueryObject,
  findUniqueRoleQueryObject
} from './Role';
export {
  PermissionObject,
  PermissionIdFieldObject,
  PermissionNameFieldObject,
  PermissionDescriptionFieldObject,
  PermissionRolesFieldObject,
  createManyPermissionMutation,
  createOnePermissionMutation,
  deleteManyPermissionMutation,
  deleteOnePermissionMutation,
  updateManyPermissionMutation,
  updateOnePermissionMutation,
  upsertOnePermissionMutation,
  createManyPermissionMutationObject,
  createOnePermissionMutationObject,
  deleteManyPermissionMutationObject,
  deleteOnePermissionMutationObject,
  updateManyPermissionMutationObject,
  updateOnePermissionMutationObject,
  upsertOnePermissionMutationObject,
  findFirstPermissionQuery,
  findManyPermissionQuery,
  countPermissionQuery,
  findUniquePermissionQuery,
  findFirstPermissionQueryObject,
  findManyPermissionQueryObject,
  countPermissionQueryObject,
  findUniquePermissionQueryObject
} from './Permission';
export {
  UserRoleObject,
  UserRoleUserIdFieldObject,
  UserRoleRoleIdFieldObject,
  UserRoleUserFieldObject,
  UserRoleRoleFieldObject,
  createManyUserRoleMutation,
  createOneUserRoleMutation,
  deleteManyUserRoleMutation,
  deleteOneUserRoleMutation,
  updateManyUserRoleMutation,
  updateOneUserRoleMutation,
  upsertOneUserRoleMutation,
  createManyUserRoleMutationObject,
  createOneUserRoleMutationObject,
  deleteManyUserRoleMutationObject,
  deleteOneUserRoleMutationObject,
  updateManyUserRoleMutationObject,
  updateOneUserRoleMutationObject,
  upsertOneUserRoleMutationObject,
  findFirstUserRoleQuery,
  findManyUserRoleQuery,
  countUserRoleQuery,
  findUniqueUserRoleQuery,
  findFirstUserRoleQueryObject,
  findManyUserRoleQueryObject,
  countUserRoleQueryObject,
  findUniqueUserRoleQueryObject
} from './UserRole';
export {
  RolePermissionObject,
  RolePermissionRoleIdFieldObject,
  RolePermissionPermissionIdFieldObject,
  RolePermissionRoleFieldObject,
  RolePermissionPermissionFieldObject,
  createManyRolePermissionMutation,
  createOneRolePermissionMutation,
  deleteManyRolePermissionMutation,
  deleteOneRolePermissionMutation,
  updateManyRolePermissionMutation,
  updateOneRolePermissionMutation,
  upsertOneRolePermissionMutation,
  createManyRolePermissionMutationObject,
  createOneRolePermissionMutationObject,
  deleteManyRolePermissionMutationObject,
  deleteOneRolePermissionMutationObject,
  updateManyRolePermissionMutationObject,
  updateOneRolePermissionMutationObject,
  upsertOneRolePermissionMutationObject,
  findFirstRolePermissionQuery,
  findManyRolePermissionQuery,
  countRolePermissionQuery,
  findUniqueRolePermissionQuery,
  findFirstRolePermissionQueryObject,
  findManyRolePermissionQueryObject,
  countRolePermissionQueryObject,
  findUniqueRolePermissionQueryObject
} from './RolePermission';
import { builder } from '../builder';

export const BatchPayload = builder.objectType(builder.objectRef<Prisma.BatchPayload>('BatchPayload'), {
  description: 'Batch payloads from prisma.',
  fields: (t) => ({
    count: t.exposeInt('count', { description: 'Prisma Batch Payload', nullable: false }),
  }),
});

export const modelNames = [
  'User',
  'Account',
  'Role',
  'Permission',
  'UserRole',
  'RolePermission',
] as const;

export type Model = typeof modelNames[number];
